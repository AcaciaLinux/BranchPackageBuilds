name=llvm
version=14.0.1
source=https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.1/llvm-14.0.1.src.tar.xz
dependencies=[cmake]
description=The LLVM package contains a collection of modular and reusable compiler and toolchain technologies.
build={
	wget https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.1/clang-14.0.1.src.tar.xz
	wget https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.1/compiler-rt-14.0.1.src.tar.xz	
	
	cd llvm-14.0.1.src
	
	tar -xf ../clang-14.0.1.src.tar.xz -C tools &&
	mv tools/clang-14.0.1.src tools/clang	
	
	tar -xf ../compiler-rt-14.0.1.src.tar.xz -C projects &&
	mv projects/compiler-rt-14.0.1.src projects/compiler-rt
	
	grep -rl '#!.*python' | xargs sed -i '1s/python$/python3/'

	mkdir -v build &&
	cd       build &&

	CC=gcc CXX=g++                                  \
	cmake -DCMAKE_INSTALL_PREFIX=/usr               \
      		-DLLVM_ENABLE_FFI=ON                      \
     		-DCMAKE_BUILD_TYPE=Release                \
     		-DLLVM_BUILD_LLVM_DYLIB=ON                \
     		-DLLVM_LINK_LLVM_DYLIB=ON                 \
      		-DLLVM_ENABLE_RTTI=ON                     \
     		-DLLVM_TARGETS_TO_BUILD="host;AMDGPU;BPF" \
      		-DLLVM_BINUTILS_INCDIR=/usr/include       \
      		-DLLVM_INCLUDE_BENCHMARKS=OFF             \
      		-Wno-dev -G Ninja ..                      &&
	ninja

	DESTDIR=$PKG_INSTALL_DIR ninja install
}
